package com.example.demo;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.*;
import java.util.stream.Stream;

public class StreamLearning {

    public static void main(String[] args) {
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        //Integer Stream
        IntStream
        	.range(1,10)
        	.forEach(System.out::print);  //123456789
        System.out.println();
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        IntStream.range(1,10)
        	.skip(5)
        	.forEach(x -> System.out.print(x));  //6789
        System.out.println();
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        System.out.println(IntStream.range(1,5).sum()); //10
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        IntStream
        	.range(1, 4)
        	.mapToObj(x -> "a"+x)
        	.forEach(System.out::print); // a1a2a3
        System.out.println();
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/ 
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Arrays.stream(new int[] {1,2,3})
        		.map(x -> 2*x+1)
        		.average()
        		.ifPresent(System.out::println);  //5.0
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        String[] names = {"Sa","Al","Ankit","Soolking"};
        Arrays.stream(names)
        		.filter(x->x.startsWith("S"))
        		.sorted()
        		.forEach(System.out::println); //Sa Soolking
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Arrays.asList("a1","a2","a3","a4").stream().findFirst().ifPresent(System.out::println); //a1
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.iterate(1, x -> x+1)
        		.filter(x -> x%5==0)
        		.limit(4)
        		.forEach(System.out::println);  //5 10 15 20
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.of("d2","a2","b1","b3","c")
        		.map(x->{
        			System.out.println("map:"+x); 
        			return x.toUpperCase();
        		})
        		.anyMatch(x->{
        			System.out.println("anyMatch"+x);
        			return x.startsWith("A");
        		}); //map:d2 anyMatch:D2 map:a2 anyMatch:A2
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.of("a1","a2","a3","a4").findFirst().ifPresent(System.out::println); //a1
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.of("Ava","Aneri","Alberto").sorted().findFirst().ifPresent(System.out::println); //Alberto
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.of("a1","a2","a3").map(x->x.substring(1)).mapToInt(Integer::parseInt).max().ifPresent(System.out::println); //3
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.of(1.0,2.0,3.0).mapToInt(Double::intValue).mapToObj(x->"a"+x).forEach(System.out::print); //a1a2a3
        System.out.println();
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.of("a1","a4","b2").filter(x -> {System.out.println("filter:"+x); return true;}); // rien à afficher
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Stream.of("a1","a4","b2").filter(x -> {System.out.println("filter:"+x); return true;}).forEach(x->System.out.println("foreach:"+x));
        //filter:a1 foreach:a1 filter:a4 foreach:a4 filter:b2 foreach:b2
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*----------------------------   -----------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        List<Product> productList = new ArrayList<Product>();
        productList.add(new Product(1,"Computer",1200));
        productList.add(new Product(2,"Smartphone",400));
        productList.add(new Product(3,"ATV",800));
        productList.stream()
        			.filter(product -> product.price == 400)
        			.forEach(product->System.out.println(product.name)); // Smartphone
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        List<Product> productListSorted = productList.stream()
        										.sorted(Comparator.comparing(Product::getName))
        										.toList();
        System.out.println(productListSorted);
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        List<Float> integerList = productList.stream()
        				.filter(x -> x.price > 600)
        				.map(x -> x.price)
        				.collect(Collectors.toList());
        System.out.println(integerList);   //[1200.0, 800.0]
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        float somme = productList.stream()
        				.map(product -> product.price)
        				.reduce(0.0f, Float::sum);
        System.out.println(somme); //2400.0			
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        double somme0 = productList.stream()
        				.collect(Collectors.summingDouble(product -> product.price));
        System.out.println(somme0); //2400.0		
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        productList.stream()
        	.map(product -> product.price)
        	.mapToInt(Float::intValue)
        	.max()
        	.ifPresent(System.out::println); //1200
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/
        Set<Float> floatSet = productList.stream()
        							.filter(product -> product.price < 900)
        							.map(product -> product.price)
        							.collect(Collectors.toSet());
        System.out.println(floatSet);
/*---------------------------------------------------------------------------------------------------------------------------------------------------------*/ 
        List<String> stringList = Arrays.asList("a1","a2","c1","c4");
        stringList.stream().filter(x -> x.startsWith("c")).map(String::toUpperCase).sorted().forEach(System.out::println); //C1 C4
    }

}
class Product{  

	int id;  
    String name;  
    float price;  
	public int getId() {
		return id;
	}
	public String getName() {
		return name;
	}
	public float getPrice() {
		return price;
	}
	public void setId(int id) {
		this.id = id;
	}
	public void setName(String name) {
		this.name = name;
	}
	public void setPrice(float price) {
		this.price = price;
	}
    public Product(int id, String name, float price) {  
        this.id = id;  
        this.name = name;  
        this.price = price;  
    } 
    @Override
	public String toString() {
		return "Product [id=" + id + ", name=" + name + ", price=" + price + "]";
	}
}
